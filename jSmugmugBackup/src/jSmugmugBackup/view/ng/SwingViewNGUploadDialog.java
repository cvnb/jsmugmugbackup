/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SwingViewNGUploadDialog.java
 *
 * Created on Dec 21, 2008, 3:46:11 PM
 */

package jSmugmugBackup.view.ng;

import jSmugmugBackup.model.ITransferDialogResult;
import jSmugmugBackup.model.TransferDialogResult;
import jSmugmugBackup.model.accountLayer.IAlbum;
import jSmugmugBackup.model.accountLayer.ICategory;
import jSmugmugBackup.model.accountLayer.IRootElement;
import jSmugmugBackup.model.accountLayer.ISubcategory;
import jSmugmugBackup.view.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author paul
 */
public class SwingViewNGUploadDialog extends javax.swing.JDialog {

    /** Creates new form SwingViewNGUploadDialog */
    public SwingViewNGUploadDialog(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        folderFileChooser = new javax.swing.JFileChooser();
        folderLabel = new javax.swing.JLabel();
        folderTextField = new javax.swing.JTextField();
        folderButton = new javax.swing.JButton();
        uploadToLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        categoryLabel = new javax.swing.JLabel();
        categoryComboBox = new javax.swing.JComboBox();
        subcategoryLabel = new javax.swing.JLabel();
        subcategoryComboBox = new javax.swing.JComboBox();
        albumLabel = new javax.swing.JLabel();
        albumComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jSeparator2 = new javax.swing.JSeparator();
        uploadOptionsLabel = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        folderFileChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        folderFileChooser.setName("folderFileChooser"); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(jSmugmugBackup.view.ng.SwingViewNGStarterApp.class).getContext().getResourceMap(SwingViewNGUploadDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        folderLabel.setText(resourceMap.getString("folderLabel.text")); // NOI18N
        folderLabel.setName("folderLabel"); // NOI18N

        folderTextField.setText(resourceMap.getString("folderTextField.text")); // NOI18N
        folderTextField.setName("folderTextField"); // NOI18N

        folderButton.setText(resourceMap.getString("folderButton.text")); // NOI18N
        folderButton.setName("folderButton"); // NOI18N
        folderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folderButtonActionPerformed(evt);
            }
        });

        uploadToLabel.setText(resourceMap.getString("uploadToLabel.text")); // NOI18N
        uploadToLabel.setName("uploadToLabel"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        categoryLabel.setText(resourceMap.getString("categoryLabel.text")); // NOI18N
        categoryLabel.setName("categoryLabel"); // NOI18N

        categoryComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<auto>" }));
        categoryComboBox.setName("categoryComboBox"); // NOI18N
        categoryComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                categoryComboBoxItemStateChanged(evt);
            }
        });

        subcategoryLabel.setText(resourceMap.getString("subcategoryLabel.text")); // NOI18N
        subcategoryLabel.setName("subcategoryLabel"); // NOI18N

        subcategoryComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<auto>" }));
        subcategoryComboBox.setName("subcategoryComboBox"); // NOI18N
        subcategoryComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                subcategoryComboBoxItemStateChanged(evt);
            }
        });

        albumLabel.setText(resourceMap.getString("albumLabel.text")); // NOI18N
        albumLabel.setName("albumLabel"); // NOI18N

        albumComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<auto>" }));
        albumComboBox.setName("albumComboBox"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTree1.setName("jTree1"); // NOI18N
        jScrollPane1.setViewportView(jTree1);

        jSeparator2.setName("jSeparator2"); // NOI18N

        uploadOptionsLabel.setText(resourceMap.getString("uploadOptionsLabel.text")); // NOI18N
        uploadOptionsLabel.setName("uploadOptionsLabel"); // NOI18N

        okButton.setText(resourceMap.getString("okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(folderLabel)
                        .addGap(18, 18, 18)
                        .addComponent(folderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(folderButton))
                    .addComponent(uploadToLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subcategoryLabel)
                            .addComponent(albumLabel)
                            .addComponent(categoryLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(albumComboBox, 0, 161, Short.MAX_VALUE)
                                .addComponent(subcategoryComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
            .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(uploadOptionsLabel)
                .addContainerGap(344, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(267, Short.MAX_VALUE)
                .addComponent(cancelButton)
                .addGap(18, 18, 18)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(folderLabel)
                    .addComponent(folderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(folderButton))
                .addGap(1, 1, 1)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(uploadToLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryLabel)
                    .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subcategoryLabel)
                    .addComponent(subcategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(albumLabel)
                    .addComponent(albumComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uploadOptionsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
    {//GEN-HEADEREND:event_cancelButtonActionPerformed
        //making form invisible
        this.setVisible(false);

        this.uploadDialogResult = null;

        //clear input fields
        //...
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okButtonActionPerformed
    {//GEN-HEADEREND:event_okButtonActionPerformed
        //making form invisible
        this.setVisible(false);

        this.uploadDialogResult = new TransferDialogResult(null, null, null, null, null);

        //clear input fields
        //...
    }//GEN-LAST:event_okButtonActionPerformed

    private void folderButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_folderButtonActionPerformed
    {//GEN-HEADEREND:event_folderButtonActionPerformed
        // TODO add your handling code here:
        this.folderFileChooser.showOpenDialog(this);

        this.folderTextField.setText( this.folderFileChooser.getSelectedFile().getAbsolutePath() );
    }//GEN-LAST:event_folderButtonActionPerformed

    private void categoryComboBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_categoryComboBoxItemStateChanged
    {//GEN-HEADEREND:event_categoryComboBoxItemStateChanged
        // TODO add your handling code here:
        this.log = Logger.getInstance();
        this.log.printLogLine((String)evt.getItem());
    }//GEN-LAST:event_categoryComboBoxItemStateChanged

    private void subcategoryComboBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_subcategoryComboBoxItemStateChanged
    {//GEN-HEADEREND:event_subcategoryComboBoxItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_subcategoryComboBoxItemStateChanged

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SwingViewNGUploadDialog dialog = new SwingViewNGUploadDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox albumComboBox;
    private javax.swing.JLabel albumLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox categoryComboBox;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JButton folderButton;
    private javax.swing.JFileChooser folderFileChooser;
    private javax.swing.JLabel folderLabel;
    private javax.swing.JTextField folderTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTree jTree1;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox subcategoryComboBox;
    private javax.swing.JLabel subcategoryLabel;
    private javax.swing.JLabel uploadOptionsLabel;
    private javax.swing.JLabel uploadToLabel;
    // End of variables declaration//GEN-END:variables


    //--------------------------------------------------------------------------
    private Logger log = null;
    private ITransferDialogResult uploadDialogResult = null;

    private IRootElement smugmugRoot = null;

    private void updateUploadDestinationComboBoxes(String categoryFilter, String subcategoryFilter)
    {


        DefaultComboBoxModel categoryComboBoxModel = new DefaultComboBoxModel();
        for (ICategory c : smugmugRoot.getCategoryList())
        {
            categoryComboBoxModel.addElement(c.getName());
        }
        categoryComboBoxModel.addElement("<auto>");
        this.categoryComboBox.setModel(categoryComboBoxModel);



        DefaultComboBoxModel subcategoryComboBoxModel = new DefaultComboBoxModel();
        for (ICategory c : smugmugRoot.getCategoryList())
        {
            if ( (categoryFilter == null) | (categoryFilter.equals(c.getName())) )
            {
                for (ISubcategory s : c.getSubcategoryList())
                {
                    subcategoryComboBoxModel.addElement(s.getName());
                }
            }
        }
        subcategoryComboBoxModel.addElement("<auto>");
        this.subcategoryComboBox.setModel(subcategoryComboBoxModel);



        DefaultComboBoxModel albumComboBoxModel = new DefaultComboBoxModel();
        for (ICategory c : smugmugRoot.getCategoryList())
        {
            if ( (categoryFilter == null) | (categoryFilter.equals(c.getName())) )
            {
                for (ISubcategory s : c.getSubcategoryList())
                {
                    if ( (subcategoryFilter == null) | (subcategoryFilter.equals(s.getName())) )
                    {
                        for (IAlbum a : s.getAlbumList())
                        {
                            albumComboBoxModel.addElement(a.getName());
                        }
                    }
                }

                for (IAlbum a : c.getAlbumList())
                {
                    albumComboBoxModel.addElement(a.getName());
                }
            }
        }
        albumComboBoxModel.addElement("<auto>");
        this.albumComboBox.setModel(albumComboBoxModel);
    }

    public void initTransferFilter(IRootElement smugmugRoot)
    {
        this.smugmugRoot = smugmugRoot;

        this.updateUploadDestinationComboBoxes(null, null);
    }

    public ITransferDialogResult getUploadDialogResult()
    {
        return this.uploadDialogResult;
    }
}
