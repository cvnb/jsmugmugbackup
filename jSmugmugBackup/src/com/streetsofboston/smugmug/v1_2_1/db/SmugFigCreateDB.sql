-- Copyright 2007 StreetsOfBoston (Anton Spaans)
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

CREATE TABLE COMMUNITY (
	COMMUNITYID int NOT NULL
		CONSTRAINT PK_COMMUNITY PRIMARY KEY,
	NAME varchar(64) NOT NULL
); 
CREATE UNIQUE INDEX IX_COMMUNITY ON COMMUNITY (NAME ASC);

CREATE TABLE STYLE (
	STYLEID int NOT NULL
		CONSTRAINT PK_STYLE PRIMARY KEY,
	NAME varchar(64) NOT NULL
);
CREATE UNIQUE INDEX IX_STYLE ON STYLE (NAME ASC);
INSERT into STYLE values ( 0, 'ViewChoice');
INSERT into STYLE values ( 3, 'Smugmug');
INSERT into STYLE values (10, 'SmugmugSmall');
INSERT into STYLE values ( 4, 'Traditional');
INSERT into STYLE values ( 7, 'AllThumbs');
INSERT into STYLE values ( 8, 'SlideShow');
INSERT into STYLE values ( 9, 'Journal');
INSERT into STYLE values (11, 'FilmStrip');
INSERT into STYLE values (12, 'Critique');

CREATE TABLE THEME (
	THEMEID int NOT NULL 
		CONSTRAINT PK_THEME PRIMARY KEY,
	NAME varchar(64) NOT NULL
);
CREATE UNIQUE INDEX IX_THEME ON THEME (NAME ASC);



CREATE TABLE ACCOUNT (
	NICKNAME varchar(64) NOT NULL
		CONSTRAINT PK_ACCOUNT PRIMARY KEY,
	DISPLAYNAME varchar(128),
	ISFAMILY char(1) DEFAULT '0' ,
	ISFRIEND char(1) DEFAULT '0'
);
--CREATE UNIQUE INDEX IX_ACCOUNT ON ACCOUNT (NICKNAME ASC);

CREATE TABLE CATEGORY (
	CATEGORYID int NOT NULL 
		CONSTRAINT PK_CATEGORY PRIMARY KEY,
	NICKNAME varchar(64)
		CONSTRAINT FK_CATEGORY_ACCOUNT REFERENCES ACCOUNT ON DELETE RESTRICT,
	NAME varchar(64) NOT NULL
);
CREATE UNIQUE INDEX IX_CATEGORY ON CATEGORY (NAME ASC);
--CREATE INDEX IX2_CATEGORY ON CATEGORY (NICKNAME ASC);

CREATE TABLE SUBCATEGORY (
	SUBCATEGORYID int NOT NULL 
		CONSTRAINT PK_SUBCATEGORY PRIMARY KEY,
	CATEGORYID int NOT NULL
		CONSTRAINT FK_SUBCATEGORY_CATEGORY REFERENCES CATEGORY ON DELETE RESTRICT, 
	NAME varchar(64) NOT NULL,

	CONSTRAINT IX2_SUBCATEGORY UNIQUE   
	(
		NAME,
		CATEGORYID
	)
);
CREATE INDEX IX_SUBCATEGORY ON SUBCATEGORY (NAME ASC); 
--CREATE INDEX IX2_SUBCATEGORY ON SUBCATEGORY (CATEGORYID); 

CREATE TABLE ALBUMTEMPLATE (
	ALBUMTEMPLATEID INT NOT NULL
		CONSTRAINT PK_ALBUMTEMPLATE PRIMARY KEY,
	COMMUNITYID int
		CONSTRAINT FK_ALBUMTEMPLATE_COMMUNITY REFERENCES COMMUNITY ON DELETE SET NULL,
	HIGHLIGHTID int ,
	WATERMARKID int ,
	NAME varchar(64) NOT NULL
);
CREATE UNIQUE INDEX IX_ALBUMTEMPLATE ON ALBUMTEMPLATE (NAME ASC);
-- CREATE INDEX IX2_ALBUMTEMPLATE ON ALBUMTEMPLATE (COMMUNITYID);

CREATE TABLE ALBUM (
	ALBUMID int NOT NULL 
		CONSTRAINT PK_ALBUM PRIMARY KEY,
	SUBCATEGORYID int
		CONSTRAINT FK_ALBUM_SUBCATEGORY REFERENCES SUBCATEGORY ON DELETE RESTRICT, 
	CATEGORYID int NOT NULL 
		CONSTRAINT FK_ALBUM_CATEGORY REFERENCES CATEGORY ON DELETE RESTRICT, 
	COMMUNITYID int
		CONSTRAINT FK_ALBUM_COMMUNITY REFERENCES COMMUNITY  ON DELETE SET NULL, 
	THEMEID int
		CONSTRAINT FK_ALBUM_THEME REFERENCES THEME ON DELETE SET NULL, 
	VIEWSTYLEID int
		CONSTRAINT FK_ALBUM_STYLE REFERENCES STYLE ON DELETE SET NULL, 
	HIGHLIGHTID int ,
	WATERMARKID int ,
	NAME varchar(64) NOT NULL ,
	DESCRIPTION varchar(256) ,
	LASTUPDATED timestamp
);
CREATE UNIQUE INDEX IX_ALBUM ON ALBUM (NAME ASC);
--CREATE INDEX IX2_ALBUM ON ALBUM (SUBCATEGORYID);
--CREATE INDEX IX3_ALBUM ON ALBUM (CATEGORYID);
--CREATE INDEX IX4_ALBUM ON ALBUM (COMMUNITYID);

CREATE TABLE IMAGE (
	IMAGEID int NOT NULL
		CONSTRAINT PK_IMAGE PRIMARY KEY,
	ALBUMID int NOT NULL
		CONSTRAINT FK_IMAGE_ALBUM REFERENCES ALBUM ON DELETE RESTRICT,
	CAPTION varchar(256) ,
	FILENAME varchar(128) ,
	MD5SUM char(32) ,
	LASTUPDATED timestamp ,
	DATE timestamp ,
	FORMAT varchar(16) ,
	WIDTH int ,
	HEIGHT int ,
	SIZE int ,
	LONGITUDE numeric(18, 14) ,
	LATITUDE numeric(18, 14) ,
	ALTITUDE numeric(6, 0) 
);
--CREATE INDEX IX4_IMAGE ON IMAGE (ALBUMID);
CREATE INDEX IX_IMAGE ON IMAGE (CAPTION ASC);
CREATE INDEX IX2_IMAGE ON IMAGE (FILENAME ASC);
CREATE INDEX IX3_IMAGE ON IMAGE (MD5SUM ASC);
CREATE INDEX IX5_IMAGE ON IMAGE (LASTUPDATED);
CREATE INDEX IX6_IMAGE ON IMAGE (DATE);
CREATE INDEX IX7_IMAGE ON IMAGE (FORMAT ASC);

CREATE TABLE WATERMARK (
	WATERMARKID int NOT NULL 
		CONSTRAINT PK_WATERMARK PRIMARY KEY,
	IMAGEID int NOT NULL
		CONSTRAINT FK_WATERMARK_IMAGE REFERENCES IMAGE ON DELETE RESTRICT,
	NAME varchar(64) NOT NULL
);
CREATE UNIQUE INDEX IX_WATERMARK ON WATERMARK (NAME ASC);
--CREATE INDEX IX2_WATERMARK ON WATERMARK (IMAGEID);

ALTER TABLE ALBUMTEMPLATE 
	ADD CONSTRAINT FK_ALBUMTEMPLATE_IMAGE FOREIGN KEY 
	(
		HIGHLIGHTID
	) REFERENCES IMAGE (
		IMAGEID
	) ON DELETE SET NULL;
ALTER TABLE ALBUMTEMPLATE 
	ADD CONSTRAINT FK_ALBUMTEMPLATE_WATERMARK FOREIGN KEY 
	(
		WATERMARKID
	) REFERENCES WATERMARK (
		WATERMARKID
	) ON DELETE SET NULL;
ALTER TABLE ALBUM 
	ADD CONSTRAINT FK_ALBUM_IMAGE FOREIGN KEY 
	(
		HIGHLIGHTID
	) REFERENCES IMAGE (
		IMAGEID
	) ON DELETE SET NULL;
ALTER TABLE ALBUM 
	ADD CONSTRAINT FK_ALBUM_WATERMARK FOREIGN KEY 
	(
		WATERMARKID
	) REFERENCES WATERMARK (
		WATERMARKID
	) ON DELETE SET NULL;



CREATE TABLE SHAREGROUP (
	SHAREGROUPID int NOT NULL 
		CONSTRAINT PK_SHAREGROUP PRIMARY KEY,
	NAME varchar(64) NOT NULL ,
	DESCRIPTION varchar (256)
); 
CREATE UNIQUE INDEX IX_SHAREGROUP ON SHAREGROUP (NAME ASC);

CREATE TABLE SHAREGROUPALBUM (
	SHAREGROUPABLUMID int NOT NULL
		CONSTRAINT PK_SHAREGROUPALBUM PRIMARY KEY,
	SHAREGROUPID int NOT NULL 
		CONSTRAINT FK_SHAREGROUPALBUM_SHAREGROUP REFERENCES SHAREGROUP ON DELETE RESTRICT,
	ALBUMID int NOT NULL
		CONSTRAINT FK_SHAREGROUPALBUM_ALBUM REFERENCES ALBUM ON DELETE RESTRICT
);
--CREATE INDEX IX_SHAREGROUPALBUM ON SHAREGROUPALBUM (SHAREGROUPID);
--CREATE INDEX IX2_SHAREGROUPALBUM ON SHAREGROUPALBUM (ALBUMID);



CREATE TABLE KEYWORD (
	KEYWORDID int NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1) 
		CONSTRAINT PK_KEYWORD PRIMARY KEY,
	KEYWORD varchar(64) NOT NULL
);
CREATE UNIQUE INDEX IX_KEYWORD ON KEYWORD (KEYWORD ASC);

CREATE TABLE ALBUMKEYWORD (
    ALBUMKEYWORDID int NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
		CONSTRAINT PK_ALBUMKEYWORD PRIMARY KEY,
	ALBUMID int NOT NULL 
		CONSTRAINT FK_ALBUMKEYWORD_ALBUM REFERENCES ALBUM ON DELETE CASCADE,
	KEYWORDID int NOT NULL 
		CONSTRAINT FK_ALBUMKEYWORD_KEYWORD REFERENCES KEYWORD ON DELETE RESTRICT
);
--CREATE INDEX IX_ALBUMKEYWORD ON ALBUMKEYWORD (ALBUMID);
--CREATE INDEX IX2_ALBUMKEYWORD ON ALBUMKEYWORD (KEYWORDID);

CREATE TABLE IMAGEKEYWORD (
    IMAGEKEYWORDID int NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)
		CONSTRAINT PK_IMAGEKEYWORD PRIMARY KEY,
	IMAGEID int NOT NULL
		CONSTRAINT FK_IMAGEKEYWORD_IMAGE REFERENCES IMAGE ON DELETE CASCADE,
	KEYWORDID int NOT NULL
		CONSTRAINT FK_IMAGEKEYWORD_KEYWORD REFERENCES KEYWORD ON DELETE RESTRICT
);
--CREATE INDEX IX_IMAGEKEYWORD ON IMAGEKEYWORD (IMAGEID);
--CREATE INDEX IX2_IMAGEKEYWORD ON IMAGEKEYWORD (KEYWORDID);



--CREATE TABLE PRODUCT (
--	PRODUCTID UNIQUEIDENTIFIER NOT NULL ,
--	PRODUCTTYPE varchar (16) NOT NULL ,
--	NAME varchar (64) NOT NULL ,
--	DESCRIPTION varchar (256) NULL ,
--	CONSTRAINT PK_PRODUCT PRIMARY KEY   
--	(
--		PRODUCTID
--	) ,
--	CONSTRAINT IX_PRODUCT UNIQUE   
--	(
--		PRODUCTTYPE
--	) ,
--	CONSTRAINT IX_PRODUCT_1 UNIQUE   
--	(
--		NAME
--	) 
--)
--
--CREATE TABLE PORTFOLIOPRICING (
--	PORTFOLIOPRICINGID UNIQUEIDENTIFIER NOT NULL ,
--	PRODUCTID int NOT NULL ,
--	PRICE numeric(10, 2) NULL ,
--	CONSTRAINT IX_PORTFOLIOPRICING UNIQUE   
--	(
--		PRODUCTID
--	) ,
--	CONSTRAINT FK_PORTFOLIOPRICING_PRODUCT FOREIGN KEY 
--	(
--		PRODUCTID
--	) REFERENCES PRODUCT (
--		PRODUCTID
--	)
--)
--
--CREATE TABLE ALBUMPRICING (
--	ALBUMPRICINGID UNIQUEIDENTIFIER NOT NULL ,
--	ALBUMID int NOT NULL ,
--	PRODUCTID int NOT NULL ,
--	PRICE numeric(10, 2) NULL ,
--	CONSTRAINT IX_ALBUMPRICING UNIQUE   
--	(
--		ALBUMID,
--		PRODUCTID
--	) ,
--	CONSTRAINT FK_ALBUMPRICING_ALBUM FOREIGN KEY 
--	(
--		ALBUMID
--	) REFERENCES ALBUM (
--		ALBUMID
--	),
--	CONSTRAINT FK_ALBUMPRICING_PRODUCT FOREIGN KEY 
--	(
--		PRODUCTID
--	) REFERENCES PRODUCT (
--		PRODUCTID
--	)
--)
--
--CREATE TABLE IMAGEPRICING (
--	IMAGEPRICINGID UNIQUEIDENTIFIER NOT NULL ,
--	IMAGEID int NOT NULL ,
--	PRODUCTID int NOT NULL ,
--	PRICE numeric(10, 2) NULL ,
--	CONSTRAINT IX_IMAGEPRICING UNIQUE   
--	(
--		IMAGEID,
--		PRODUCTID
--	) ,
--	CONSTRAINT FK_IMAGEPRICING_IMAGE FOREIGN KEY 
--	(
--		IMAGEID
--	) REFERENCES IMAGE (
--		IMAGEID
--	),
--	CONSTRAINT FK_IMAGEPRICING_PRODUCT FOREIGN KEY 
--	(
--		PRODUCTID
--	) REFERENCES PRODUCT (
--		PRODUCTID
--	)
--)
--
--
--
--CREATE TABLE ORDER (
--	ORDERID UNIQUEIDENTIFIER NOT NULL ,
--	CONSTRAINT PK_ORDER PRIMARY KEY   
--	(
--		ORDERID
--	) 
--)
--
--CREATE TABLE STATS (
--	IMAGEID int NULL ,
--    ALBUMID int NULL , 
--	BYTES int NULL ,
--	TINY int NULL ,
--	SMALL int NULL ,
--	ETC int NULL 
--)
